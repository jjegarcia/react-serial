{"ast":null,"code":"var _createClass = require(\"/Users/jgarc609/github/changing-complex-state-completed-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/jgarc609/github/changing-complex-state-completed-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/jgarc609/github/changing-complex-state-completed-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/jgarc609/github/changing-complex-state-completed-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DelimiterParser = require('@serialport/parser-delimiter');\n/**\n *  A transform stream that emits data after a newline delimiter is received.\n * @summary To use the `Readline` parser, provide a delimiter (defaults to `\\n`). Data is emitted as string controllable by the `encoding` option (defaults to `utf8`).\n * @extends DelimiterParser\n * @example\nconst SerialPort = require('serialport')\nconst Readline = require('@serialport/parser-readline')\nconst port = new SerialPort('/dev/tty-usbserial1')\nconst parser = port.pipe(new Readline({ delimiter: '\\r\\n' }))\nparser.on('data', console.log)\n*/\n\n\nvar ReadLineParser = /*#__PURE__*/function (_DelimiterParser) {\n  \"use strict\";\n\n  _inherits(ReadLineParser, _DelimiterParser);\n\n  var _super = _createSuper(ReadLineParser);\n\n  function ReadLineParser(options) {\n    _classCallCheck(this, ReadLineParser);\n\n    var opts = Object.assign({\n      delimiter: Buffer.from('\\n', 'utf8'),\n      encoding: 'utf8'\n    }, options);\n\n    if (typeof opts.delimiter === 'string') {\n      opts.delimiter = Buffer.from(opts.delimiter, opts.encoding);\n    }\n\n    return _super.call(this, opts);\n  }\n\n  return _createClass(ReadLineParser);\n}(DelimiterParser);\n\nmodule.exports = ReadLineParser;","map":null,"metadata":{},"sourceType":"script"}
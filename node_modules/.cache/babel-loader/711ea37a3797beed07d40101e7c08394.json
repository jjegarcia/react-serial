{"ast":null,"code":"var fs = require('fs');\n\nvar debug = require('debug');\n\nvar logger = debug('serialport/bindings/unixWrite');\n\nmodule.exports = function unixWrite(buffer, offset) {\n  var _this = this;\n\n  offset = offset || 0;\n  var bytesToWrite = buffer.length - offset;\n  logger('Starting write', buffer.length, 'bytes offset', offset, 'bytesToWrite', bytesToWrite);\n\n  if (!this.isOpen) {\n    return Promise.reject(new Error('Port is not open'));\n  }\n\n  return new Promise(function (resolve, reject) {\n    fs.write(_this.fd, buffer, offset, bytesToWrite, function (err, bytesWritten) {\n      logger('write returned', err, bytesWritten);\n\n      if (err && (err.code === 'EAGAIN' || err.code === 'EWOULDBLOCK' || err.code === 'EINTR')) {\n        if (!_this.isOpen) {\n          return reject(new Error('Port is not open'));\n        }\n\n        logger('waiting for writable because of code:', err.code);\n\n        _this.poller.once('writable', function (err) {\n          if (err) {\n            return reject(err);\n          }\n\n          resolve(unixWrite.call(_this, buffer, offset));\n        });\n\n        return;\n      }\n\n      var disconnectError = err && (err.code === 'EBADF' || // Bad file number means we got closed\n      err.code === 'ENXIO' || // No such device or address probably usb disconnect\n      err.code === 'UNKNOWN' || err.errno === -1); // generic error\n\n      if (disconnectError) {\n        err.disconnect = true;\n        logger('disconnecting', err);\n      }\n\n      if (err) {\n        logger('error', err);\n        return reject(err);\n      }\n\n      logger('wrote', bytesWritten, 'bytes');\n\n      if (bytesWritten + offset < buffer.length) {\n        if (!_this.isOpen) {\n          return reject(new Error('Port is not open'));\n        }\n\n        return resolve(unixWrite.call(_this, buffer, bytesWritten + offset));\n      }\n\n      logger('Finished writing', bytesWritten + offset, 'bytes');\n      resolve();\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}